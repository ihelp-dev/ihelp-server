AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CodePipeline for service
Parameters:
  AppName:
    Type: String
    Description: "Name of the application"
  Environment:
    Type: String
    Description: "application environment"
    Default: development
  GitHubRepoOwner:
    Type: String
    Description: GitHub User
    Default: "ihelp-dev"
  GitHubRepoName:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: "ihelp-server"
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "main"
  GitHubToken:
    NoEcho: true
    Type: String
    Default: '{{resolve:secretsmanager:github/personal-access-token:SecretString}}'
    Description: GitHub Token. Must be defined in AWS Secrets Manager and here https://github.com/settings/tokens

  ContainerPort:
    Type: String
    Description: "Port at which node server is running"
    Default: 8080

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubRepoOwner
          - GitHubRepoName
          - GitHubBranch
    ParameterLabels:
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubRepoOwner: 
        default: ihelp-dev
      GitHubRepoName: 
        default: ihelp-server
      GitHubBranch: 
        default: main


###Global resources must be defined before launching the pipeline
Resources:
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-${Environment}-${AWS::Region}-cloudformation-role
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            Service: 
              - cloudformation.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        
  CodeBuildRole:
    DependsOn: CloudFormationRole 
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-${Environment}-${AWS::Region}-codebuild-role
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodePipelineRole:
    DependsOn: CloudFormationRole 
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-${Environment}-${AWS::Region}-codepipeline-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodePipelineBucket:
    DependsOn: CloudFormationRole
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AppName}-${Environment}-${AWS::Region}-codepipeline-artifacts
      VersioningConfiguration:
        Status: Enabled

  CodeBuildProject:
    DependsOn: CodeBuildRole 
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: IMAGE_URI
            Type: PLAINTEXT
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}-${Environment}
          - Name: NODE_URI
            Type: PLAINTEXT
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/node
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Sub ${AWS::AccountId}
          - Name: NODE_PORT
            Type: PLAINTEXT
            Value: !Sub ${ContainerPort} ##Port to be exposed (ie port at which node server is running)
          - Name: APP_NAME
            Type: PLAINTEXT
            Value: !Sub ${AppName}
          - Name: Environment
            Type: PLAINTEXT
            Value: !Sub ${Environment}
        Image: aws/codebuild/standard:3.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 120

  CodePipeline:
    DependsOn: CodePipelineRole 
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AppName}-${Environment}-pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref CodePipelineBucket
        Type: S3
        
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1

        - Name: Configuration
          Actions:
            - Name: UpdatePipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                ChangeSetName: pipelinechangeset
                StackName: !Sub ${AWS::StackName}
                TemplatePath: SourceCodeOutputArtifact::configuration/cloudformation/pipeline/pipeline-prod.yaml
                ParameterOverrides: !Sub |
                  {
                    "AppName" : "${AppName}",
                    "Environment": "${Environment}",
                    "GitHubRepoOwner" : "${GitHubRepoOwner}",
                    "GitHubRepoName" : "${GitHubRepoName}",
                    "GitHubBranch" : "${GitHubBranch}",
                    "GitHubToken" : "${GitHubToken}"
                  }
              RunOrder: 1

            - Name: GlobalResources
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: global
                ChangeSetName: globalchangeset
                TemplatePath: !Sub SourceCodeOutputArtifact::configuration/cloudformation/global/global.yaml
                ParameterOverrides: !Sub |
                  {
                    "AppName" : "${AppName}",
                    "Environment": "${Environment}"
                  }
              RunOrder: 2

            - Name: UpdateVpcStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AppName}-${Environment}-vpc
                ChangeSetName: vpcchangeset
                TemplatePath: SourceCodeOutputArtifact::configuration/cloudformation/infra/vpc.yaml
                ParameterOverrides: !Sub |
                  {
                    "Environment": "${Environment}",
                    "AppName" : "${AppName}"
                  }
              RunOrder: 3

            - Name: UpdateECSStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AppName}-${Environment}-ecs
                ChangeSetName: ecschangeset
                TemplatePath: SourceCodeOutputArtifact::configuration/cloudformation/infra/ecs.yaml
                ParameterOverrides: !Sub |
                  {
                    "Environment": "${Environment}",
                    "AppName" : "${AppName}",
                    "ContainerPort": "${ContainerPort}"
                  }
              RunOrder: 4

        - Name: Execute
          Actions:
            - Name: ExecutePipelineChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipelinechangeset
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AWS::StackName} 
                Capabilities: CAPABILITY_IAM
              RunOrder: 1

            - Name: ExecuteGlobalChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: globalchangeset
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: global 
                Capabilities: CAPABILITY_IAM
              RunOrder: 2
            
            - Name: ExecuteVpcChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: vpcchangeset
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AppName}-${Environment}-vpc
                Capabilities: CAPABILITY_IAM
              RunOrder: 3
            
            - Name: ExecuteEcsChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: ecschangeset
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AppName}-${Environment}-ecs
                Capabilities: CAPABILITY_IAM
              RunOrder: 4
 
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              OutputArtifacts:
                - Name: BuildOutputArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: DeployToECS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Sub ${AppName}-${Environment}-cluster
                ServiceName: !Sub ${AppName}-${Environment}-fargate-service
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 1

        - Name: Lambdas
          Actions:
            - Name: DeployLambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AWS::StackName} 
                Capabilities: CAPABILITY_IAM
                TemplatePath: SourceCodeOutputArtifact::output/lambda-out.yaml
                ParameterOverrides: !Sub |
                  {
                    "Environment": "${Environment}",
                    "AppName" : "${AppName}"
                  }
              RunOrder: 1
 

Outputs:
  CodePipelineBucket:
    Description: S3 Bucket for Code Pipeline artifacts
    Value: !Ref CodePipelineBucket
    Export:
      Name: CodePipelineBucket
